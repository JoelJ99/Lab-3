 #include <stdio.h>

int main()
{
   int i, x;
   char str[100];

   printf("\nPlease enter a string:\t");
   gets(str);

   printf("\nPlease choose following options:\n");
   printf("1 = Encrypt the string.\n");
   printf("2 = Decrypt the string.\n");
   scanf("%d", &x);

   //using switch case statements
   switch(x)
   {
   case 1:
      for(i = 0; (i < 100 && str[i] != '\0'); i++)
        str[i] = str[i] + 3; //the key for encryption is 3 that is added to ASCII value

      printf("\nEncrypted string: %s\n", str);
      break;

   case 2:
      for(i = 0; (i < 100 && str[i] != '\0'); i++)
        str[i] = str[i] - 3; //the key for encryption is 3 that is subtracted to ASCII value

      printf("\nDecrypted string: %s\n", str);
      break;

   default:
      printf("\nError\n");
   }
   return 0;
}


//write test file

struct rec
{
char mydata;
};

int write_file()
{
int i;
int counter;
FILE *FP;
struct rec my_record;

FP=fopen("test.txt","rb");
if (!FP)
{
printf("Unable to open file!");
return 1;
}
i = 0;

for ( counter=0; counter < 10; counter++)
{
my_record.mydata= i;
fseek ( FP , counter , SEEK_END );
fwrite(&my_record, sizeof(struct rec), 1, FP);
i++;
}

fclose(FP);

return 0;
}



//Read  file



int read_file()
{
int counter;
FILE *FP;
struct rec my_record;

FP=fopen("test.txt","rb");
if (!FP)
{
printf("Unable to open file!");
return 1;
}
for ( counter=1; counter <= 10; counter++)
{
fread(&my_record,sizeof(struct rec),1,FP);
printf("%d\n",my_record.mydata);
}

if (FP == NULL) {
} else {

    free(FP);
    FP = NULL;

{
fprintf(stderr,"Insufficient memory");
exit("EXIT_FAILURE");
}
void rewind( FILE *FP );
fclose(FP);
return 0;
}
}
